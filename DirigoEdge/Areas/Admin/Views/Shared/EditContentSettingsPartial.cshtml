@model DirigoEdgeCore.Models.ViewModels.EditContentViewModel

<div class="panel container-fluid settings">
    <h4>Settings</h4>
    
    @{
        bool isActive = Convert.ToBoolean(Model.ThePage.IsActive);
        string formattedDate = isActive ? Convert.ToDateTime(Model.ThePage.PublishDate).ToString("MM/dd/yyyy @ hh:mm") : "(Draft)" ;
        string publishedLabel = isActive ? "Update" : "Publish";
        string statLabel = isActive ? "Published" : "Draft";
    }

    <div class="saveContainer">
        <a id="SaveContentButton" class="btn btn-primary mobileMarginBottom">@publishedLabel</a>
        <a id="SaveDraftButton" class="btn btn-default">Save Draft</a>
        <a id="PreviewContentButton" href="/admin/pages/previewcontent/?id=@Model.ThePage.ContentPageId" class="btn btn-default mobileMarginBottom" target="_blank">Preview</a>
        <div id="SaveSpinner" class="standaloneSpinner"></div>
    </div>
    
    <div class="contentStatus">
        <label>Status : <a id="StatusLabel" href="#">@statLabel</a></label>
        
        <div id="DraftStatusContainer">
            
            @{
                string draftSelected = !isActive ? "selected=selected" : "";
                string pubSelected = isActive ? "selected=selected" : "";
            }

            <select class=" form-control" id="DraftStatusSelector" autocomplete="off">
                <option value="draft" @draftSelected>Draft</option>
                <option value="published" @pubSelected>Published</option>
            </select>        
            
            <a id="CloseDraftStatus" href="#">Close</a>

        </div>

        
    </div>

    <div class="publishContainer clearfix">
        Last Published : <span id="PublishedDate" date="@Model.ThePage.PublishDate" timezone="@Model.TimeZone"  format="MM/DD/YYYY &#64; h:mm" class="convertTime">@formattedDate</span>
    </div>

</div>

<div class="panel container-fluid template">
    <h4>Template</h4>
    <div class="form-group">
        <select class=" form-control" id="ContentTemplateSelect">
            @foreach (var template in Model.Templates)
            {
                string templateName = template.Value.TemplateName;
                string selected = template.Key == Model.ThePage.Template ? "selected = selected" : "";

                <option @selected value="@template.Key">@templateName</option>
            }
        </select>
    </div>
</div>

@{
    string hideSchemaClass = !Model.ShowSchemaSelector ? "hide" : "";
}
<div class="panel container-fluid @hideSchemaClass">
    <h4>Schema</h4>
                
    <select class="form-control" id="SchemaSelector" autocomplete="off">
                    
        @{
            string noneSelected = (Model.ThePage.SchemaId == null || Model.ThePage.SchemaId <= 0) ? "selected=selected" : "";
        }
        <option data-id="-1" @noneSelected>None</option>
        @foreach (var schema in Model.Schemas)
        {
            string selected = schema.SchemaId == Model.ThePage.SchemaId ? "selected=selected" : "";
            <option @selected data-id="@schema.SchemaId">@schema.DisplayName</option>
        }
    </select>
            
    <div class="panelActions">
        <a id="RefreshSchemaLink" href="#">Refresh <i class="fa fa-refresh"></i></a> | <a id="EditSchemaLink" href="/admin/schemas/editschema/@Model.ThePage.SchemaId" target="_blank">Edit Schema <i class="fa fa-external-link"></i></a>
    </div>

</div>


<div class="panel container-fluid">
    <h4>Parent</h4>
    <div class="form-group">
        <select id="PageCategory" class="form-control" autocomplete="off">
            <option data-id="-2">Root</option>
            @foreach (var kvp in Model.NavList)
            {
                string disabled = Model.ParentNavIdsToDisable.Any(x => x == kvp.Key) ? "disabled=disabled" : "";
                string selected = Model.ThePage.ParentNavigationItemId == kvp.Key ? "selected=selected" : "";
                <option @disabled data-id="@kvp.Key" @selected>@Html.Raw(kvp.Value)</option>
            }
        </select>
    </div>
</div>

@if (Model.ThePage.SchemaId > 0 && Roles.IsUserInRole("Administrators"))
{
    <div class="panel container-fluid">
        <h3>Sync View</h3>
        <a href="#" class="sync-schema-view js-sync-schema-view" data-ispage="true" data-item="@Model.ThePage.ContentPageId" data-schema="@Model.ThePage.SchemaId">
            Copy View to All Pages <i class="fa fa-refresh fa-spin"></i>
        </a>
    </div>
}

<div class="panel container-fluid setMetaInformation">
    <h4>SEO / Meta</h4>
    <div class="form-group">
        @{
            var indexChecked = @Model.ThePage.NoIndex ? "checked=checked" : "";
        }
        <label>
            <input type="checkbox" class="no-index" @indexChecked/> No Index
        </label>
    </div>
    <div class="form-group">
        @{
            var followChecked = @Model.ThePage.NoFollow ? "checked=checked" : "";
        }
        <label>
            <input type="checkbox" class="no-follow" @followChecked/> No Follow
        </label>
    </div>
    <div class="form-group">
        <label class="" data-toggle="tooltip" data-placement="top" title="Commonly used by search engines to display preview snippets for a given page.">Meta Description</label>
        <input id="MetaDescription" class=" form-control" type="text" placeholder="" autocomplete=off value="@Model.ThePage.MetaDescription">
    </div>
    <div class="form-group">
        <label class="" data-toggle="tooltip" data-placement="top" title="Open Graph : An image URL which should represent your object within the graph.">OGImage</label>
        <input class=" form-control" id="OGImage" type="text" placeholder="" autocomplete=off value="@Model.ThePage.OGImage">
        @*<a href="javascript:void(0);" data-toggle="modal" data-target="#SEOMetaModal">Set Meta Information</a>*@
    </div>
</div>

@Html.Partial("~/Areas/Admin/Views/Shared/Partials/ContentSettingsExtended.cshtml", Model)

<div class="panel container-fluid reviewRevisions">
    <h4>History</h4>
    
    <div id="RevisionsList" class="form-group">
        @Html.Partial("~/Areas/Admin/Views/Shared/Partials/RevisionsListInnerPartial.cshtml", Model.Revisions)
    </div>
</div>